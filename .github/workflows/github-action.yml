name: Terraform Action

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  terraform:
    runs-on: ubuntu-latest

    strategy:
      matrix:
       tf_version: [5.0.0]  # Add additional versions if needed

    env:
      TF_VAR_tf_backend_bucket: ${{ secrets.TF_BACKEND_BUCKET }}
      TF_VAR_tf_backend_key: ${{ secrets.TF_BACKEND_KEY }}
      TF_VAR_tf_backend_region: ${{ secrets.TF_BACKEND_REGION }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
       terraform_version: ${{ matrix.tf_version }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: Terraform_statefile_gitbubpolicy
        aws-region: ${{ secrets.TF_BACKEND_REGION }}

    - name: Initialize Terraform
      run: |
        terraform init -backend-config="bucket=${TF_VAR_tf_backend_bucket}" -backend-config="key=${TF_VAR_tf_backend_key}" -backend-config="region=${TF_VAR_tf_backend_region}"
        
#       terraform init -backend-config="access_key=${TF_VAR_aws_access_key}" -backend-config="secret_key=${TF_VAR_aws_secret_key}" -backend-config="bucket=${TF_VAR_tf_backend_bucket}" -backend-config="key=${TF_VAR_tf_backend_key}" -backend-config="region=${TF_VAR_tf_backend_region}"

    - name: Validate Terraform
      run: terraform validate

    - name: Plan Terraform
      run: terraform plan -out=tfplan
      if: github.event_name == 'pull_request'
      continue-on-error: true

    - name: Apply Terraform
      if: github.event_name == 'push'
      run: terraform apply -auto-approve tfplan
